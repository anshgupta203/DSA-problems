class Solution {
public:
    int numberOfArrays(vector<int>& differences, int lower, int upper) {
        long el = lower, mx= lower, mn = lower;
        for(auto it: differences){
            el += it;
            mx = max(mx, el);
            mn = min(mn, el);
        }
        int res = (upper - lower) - ( mx - mn ) + 1;
        if(res<0) return 0;
        return res;
    }
};

///
Explanation
Assume we start with el = lower,
continuously calculate the next value by difference.
We only need to record the current value el, the max and the min value in this sequence.

Now we need to put the sequence with range [min, max] into a range of [lower, upper].

If upper - lower < max - min, no possible hidden sequences.
If upper - lower == max - min, we have only 1 possible hidden sequences.
If upper - lower == max - min + 1, we have 2 possible hidden sequences.
If upper - lower == max - min + k, we have k + 1 possible hidden sequences.


Complexity
Time O(n)
Space O(1)